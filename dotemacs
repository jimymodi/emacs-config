;; .emacs file of Vineet Naik

;; General Settings
(menu-bar-mode -1) ;; Get rid of the menu bar first!
(tool-bar-mode -1) ;; and then the tool bar
(mouse-avoidance-mode 'cat-and-mouse) ;; then the mouse
(setq x-select-enable-clipboard t) ;; x-copy-paste
(setq inhibit-startup-message t) ;; Get rid of the startup message
(setq c-basic-offset 4) ;; basic c/php indentation to 4 spaces
(setq-default indent-tabs-mode nil) ;; I hate tabs!
(setq-default truncate-lines t) ;; I hate line-wrapping!
(iswitchb-mode 1) ;; enable iswitch buffer
(icomplete-mode t)  ;; Show completions in mini buffer
(which-function-mode t) ;; enable which function mode
(global-linum-mode t) ;; Show line nums on left

;; Custom file where Customize-* will write
(setq custom-file "~/emacs/site/common/custom.el")
(load custom-file)

;; for php, xhtml, js mixed docs etc.
(load "~/emacs/site/nxhtml/autostart.el")
(setq mumamo-background-colors nil) 
(add-to-list 'auto-mode-alist '("\\.html$" . django-html-mumamo-mode))

;; add the common dir where all random modes will reside
(add-to-list 'load-path (expand-file-name "~/emacs/site/common"))

;; for better array indentation in php
(add-hook 'php-mode-hook (lambda ()
    (defun ywb-php-lineup-arglist-intro (langelem)
      (save-excursion
        (goto-char (cdr langelem))
        (vector (+ (current-column) c-basic-offset))))
    (defun ywb-php-lineup-arglist-close (langelem)
      (save-excursion
        (goto-char (cdr langelem))
        (vector (current-column))))
    (c-set-offset 'arglist-intro 'ywb-php-lineup-arglist-intro)
    (c-set-offset 'arglist-close 'ywb-php-lineup-arglist-close)))

;; javascript mode (espresso)
;; (require 'espresso) wow! already included
(autoload #'espresso-mode "espresso" "Start espresso-mode" t)
(add-to-list 'auto-mode-alist '("\\.js$" . espresso-mode))

;; Josh's lite weight json major mode
(autoload 'json-mode "json-mode.el" "Major mode for editing json files" t)
(add-to-list 'auto-mode-alist '("\\.json$" . json-mode))

;; Pyflakes (Flymake included in emacs23+)
(when (load "flymake" t) 
  (defun flymake-pyflakes-init () 
    (let* ((temp-file (flymake-init-create-temp-buffer-copy 
                       'flymake-create-temp-inplace)) 
           (local-file (file-relative-name 
                        temp-file 
                        (file-name-directory buffer-file-name)))) 
      (list "pyflakes" (list local-file))))
  
  (add-to-list 'flymake-allowed-file-name-masks 
               '("\\.py\\'" flymake-pyflakes-init)))

(add-hook 'find-file-hook 'flymake-find-file-hook)

;; flymake for php
(defun flymake-php-init ()
  "Use php to check the syntax of the current file."
  (let* ((temp (flymake-init-create-temp-buffer-copy 'flymake-create-temp-inplace))
	 (local (file-relative-name temp (file-name-directory buffer-file-name))))
    (list "php" (list "-f" local "-l"))))

(add-to-list 'flymake-err-line-patterns
  '("\\(Parse\\|Fatal\\) error: +\\(.*?\\) in \\(.*?\\) on line \\([0-9]+\\)$" 3 4 nil 2))

(add-to-list 'flymake-allowed-file-name-masks '("\\.php$" flymake-php-init))

;; disable flymake for html
(delete '("\\.html?\\'" flymake-xml-init) flymake-allowed-file-name-masks)

;; enhancements for displaying flymake errors
(require 'flymake-cursor)

;; markdown-mode
(autoload 'markdown-mode "markdown-mode.el" "Major mode for editing Markdown files" t) 
(setq auto-mode-alist (cons '("\\.md" . markdown-mode) auto-mode-alist))
(setq auto-mode-alist (cons '("\\.markdown" . markdown-mode) auto-mode-alist))

;; color-theme
(add-to-list 'load-path "/usr/share/emacs/site-lisp/emacs-goodies-el/color-theme.el/file")
(require 'color-theme)

(add-to-list 'load-path "~/emacs/site/common/color-theme-solarized")
(require 'color-theme-solarized)
(color-theme-solarized-dark)
;;(require 'color-theme-tangotango)

;; Org Mode
(setq load-path (cons "~/emacs/site/org-7.7/lisp" load-path))
(setq load-path (cons "~/emacs/site/org-7.7/contrib/lisp" load-path))
(require 'org-install)
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)
(setq org-hide-leading-stars t) ;; hide leading stars

;; octave mode
(autoload 'octave-mode "octave-mod" nil t)
(setq auto-mode-alist
      (cons '("\\.m$" . octave-mode) auto-mode-alist))

;; any custom face attributes must come after color theme conf to take effect
;; flymake error and warning faces
;; (defun override-theme ()
;;   (progn
;;     (set-face-background 'flymake-errline "DarkRed")
;;     (set-face-background 'flymake-warnline "DarkBlue")))

;; (override-theme)